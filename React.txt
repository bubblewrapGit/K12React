React.js

- 페이스북 소프트웨어 엔지니어 Jordan Walke가 개발 / Front-end용 자바스크립트 라이브러리
- 2011 페이스북 뉴스피드에서 처음 적용 -> 2012 인스타그램 적용 -> JSContUS 오픈소스화
- 모듈방식 O / 페이지단위방식 O
	- 페이지단위 -> 다른 프레임워크 + 라이브러리 + 부분페이지에 React
	
[렌더링]
	ReactDOM.render(리액트 엘리먼트, dom경로)
		- 실제 HTML에 태그를 생성하지 않고 자바스크립트 객체를 통해 DOM노드를 만든다.
		하기 두가지 방법은 동일하다.
			1. createElement()함수 의 자바스크립트 객체 => 렌더링 => 실제 DOM노드
			2. ReactDOM.render(JSX, 컨테이너)
		
		- ★ React는 실제 DOM을 다루는 것이 아닌! => DOM에 매핑되는 가상의 자바스크립트 객체를 다룸 => Virtual DOM(가상돔)
		- 메모리를 활용한다.
		- 검색시
			- DOM을 찾는것이 아니라 메모리에서 찾음
			- 훨씬 빠른 업데이트 속도
		- 초기에 전체 DOM 렌더링 이후는 필요한 부분만 업데이트
		-메모리의 가상DOM(자바스크립트 객체)에서 변경된 부분만 업데이트
		
[DOM] (Document Object Model)
	- 객체 구조화 문서
	- 트리형태
	- 브라우저에서 DOM의 변화가 일어난다면
		- CSS 재연산
		- 레이아웃 구성
		- 웹페이지 Repaint
		- 등등 .... 시간 지연
	- ★ Reflow : 레이아웃 구성 / ★ Repaint : 그 외(색상 등)
	
[Virtual DOM]
	- 실제DOM을 추상화시킨 자바스크립트 객체를 사용한다.
	- 가상DOM은 DOM에 변경이 있을때만 해당 내용만 반영한다.
	- 성능 향상
	
[JSX]
	- JSX란 ? createElement() 를 쉽게 만들기 위한 확장문법
		=> createElement() -> 반환 -> 리액트 엘리먼트(== 자바스크립트 객체)   ==   JSX
	- 시각적으로 도움
	- 필수 X
	- JSX => 문자열 NO! / HTML NO! -> 자바스크립트 확장문법!
	
	-------------- [ JSX ] ----------------------------------------	
		const element = (								
			<h1 className="greeting">
				Hello, React!
			</h1>
		);
	--------------------------------------------------------------
	
	=====================================
	======= 위·아래 둘은 동일하게 작동된다 ==========
	=====================================
	
	-------- [ React.createElement() ] ------------------------- 
		var element = React.createElement("h1", {className: "greeting"}, "Hello, React!");
	---------------------------------------------- ----------------
	
	- JSX에서 자바스크립트 코드를 입력할 때  ★ JSX Expression {   } (중괄호) 를 사용한다.
	- JSX 속성
		: 자바스크립트 변수 일 때 => 속성명={자바스크립트 변수}
		: 일반값 일 때			 	  => 속성명="속성값"
	- if문 / for루프 안에서 사용가능
	- 스타일을 주려면 
		: 올바른 방식   =>   style={{ 속성명(camelCase형태) : 변수 || 스트링 }}
		: 잘못된 방식   =>   style="color:red"
		- 바깥쪽 {} : Javascript 사용 공간
		- 안쪽 {} 	: Javascript객체(JSON)
	- 반드시 최상위 태그 존재
	- input / img 등의 독자태그는 self closing /> 해야함.
	
[Babel] (Babel is a Javascript compiler)
	- 자바스크립트 컴파일러 
	- 소스 대 소스 컴파일러 (== transpiler : 트랜스파일러)
	└ A 프로그래밍언어 -> B 프로그래밍언어
	- 자바스크립트(ES6) 을 지원하지 못하는 브라우저를 위해 ES5문법으로 바꿔준다.
	- EXNext문법을 기존(노후된) 브라우저에서 사용할 수 있게 해준다.
	└ EXNext문법이란 ES6이후의 모든 버전의 자바스크립트.